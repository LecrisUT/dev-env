on:
  workflow_call:
    inputs:
      push:
        description: Push to github registry
        type: boolean
        default: false
      rebuild:
        description: Rebuild image
        type: boolean
        default: false

permissions:
  contents: read
  packages: write

jobs:
  build-and-push-image:
    name: >
      🛠️ Build
      ${{ inputs.push && ' -> 🚀 Push'  || ' only' }}
      Fedora ${{ matrix.fedora_version }}
      ${{ matrix.toolchain }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fedora_version: [ "41", "42", "rawhide" ]
        toolchain: [ "", "gcc", "llvm", "intel" ]
        include:
          - fedora_version: "42"
            latest: true
        exclude:
          - # Intel does not provide repos for rawhide
            fedora_version: "rawhide"
            toolchain: "intel"
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - # Construct the main image label, e.g. `f42-gcc`
        id: container-tag
        run: |
          if [[ "${{ matrix.fedora_version }}" =~ ^[0-9]+$ ]]; then
            tag="f${{ matrix.fedora_version }}"
          else
            tag="${{ matrix.fedora_version }}"
          fi
          tag_suffix=""
          if [[ -n "${{ matrix.toolchain }}" ]]; then
            tag_suffix="-${{ matrix.toolchain }}"
          fi
          tag="$tag$tag_suffix"
          if [[ "${{ matrix.latest }}" = "true" ]]; then
            latest=true
          else
            latest=false
          fi

          echo "tag=$tag" >> "$GITHUB_OUTPUT"
          echo "tag_suffix=$tag_suffix" >> "$GITHUB_OUTPUT"
          echo "latest=$latest" >> "$GITHUB_OUTPUT"
      - # Construct the labels to reference the current build
        # An example format is `f42-gcc-YYYYMMDD`
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            # For PRs and debugging, tag with `pr-XX-f42-gcc`
            type=ref,event=pr,prefix=pr-,suffix=-${{ steps.container-tag.outputs.tag }}
            # Tag all images with `f42-gcc` (except PR images)
            type=raw,value=${{ steps.container-tag.outputs.tag }},enable=${{ github.event_name != 'pull_request' }}
            # Tag all images with `f42-gcc-YYYMMDD` format (except PR images)
            type=raw,value=${{ steps.container-tag.outputs.tag }}-{{date 'YYYYMMDD'}},enable=${{ github.event_name != 'pull_request' }}
            # Tag the image with latest-$toolchain if latest Fedora release is being built (except PR images)
            type=raw,value=latest${{ steps.container-tag.outputs.tag_suffix }},enable=${{ github.event_name != 'pull_request' && steps.container-tag.outputs.latest }}
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: Containerfile
          pull: true
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: ${{ inputs.push || inputs.rebuild }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            fedora_version=${{ matrix.fedora_version }}
            toolchain_gcc=${{ matrix.toolchain == 'gcc' || matrix.toolchain == '' }}
            toolchain_llvm=${{ matrix.toolchain == 'llvm' || matrix.toolchain == '' }}
            toolchain_intel=${{ matrix.toolchain == 'intel' || ( matrix.toolchain == '' && matrix.fedora_version != 'rawhide' ) }}
